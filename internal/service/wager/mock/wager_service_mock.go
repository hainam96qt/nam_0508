// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_wager is a generated GoMock package.
package mock_wager

import (
	context "context"
	db "nam_0508/internal/repo/dbmodel"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWagerRepository is a mock of WagerRepository interface.
type MockWagerRepository struct {
	ctrl     *gomock.Controller
	recorder *MockWagerRepositoryMockRecorder
}

// MockWagerRepositoryMockRecorder is the mock recorder for MockWagerRepository.
type MockWagerRepositoryMockRecorder struct {
	mock *MockWagerRepository
}

// NewMockWagerRepository creates a new mock instance.
func NewMockWagerRepository(ctrl *gomock.Controller) *MockWagerRepository {
	mock := &MockWagerRepository{ctrl: ctrl}
	mock.recorder = &MockWagerRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWagerRepository) EXPECT() *MockWagerRepositoryMockRecorder {
	return m.recorder
}

// CreateWager mocks base method.
func (m *MockWagerRepository) CreateWager(ctx context.Context, wager db.CreateWagerParams) (*db.Wager, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWager", ctx, wager)
	ret0, _ := ret[0].(*db.Wager)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWager indicates an expected call of CreateWager.
func (mr *MockWagerRepositoryMockRecorder) CreateWager(ctx, wager interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWager", reflect.TypeOf((*MockWagerRepository)(nil).CreateWager), ctx, wager)
}

// ListWagers mocks base method.
func (m *MockWagerRepository) ListWagers(ctx context.Context, params db.ListWagersParams) ([]db.Wager, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListWagers", ctx, params)
	ret0, _ := ret[0].([]db.Wager)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListWagers indicates an expected call of ListWagers.
func (mr *MockWagerRepositoryMockRecorder) ListWagers(ctx, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListWagers", reflect.TypeOf((*MockWagerRepository)(nil).ListWagers), ctx, params)
}
